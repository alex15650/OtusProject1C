
#Область ОбработчикиПодписок

Процедура СоздатьОбновитьОперациюУпрУчет(Источник, Отказ) Экспорт
	
	МетаданныеДокумента = Источник.Метаданные();
	
	Если Не МетаданныеДокумента.Движения.Содержит(Метаданные.РегистрыБухгалтерии.Найти("Хозрасчетный")) Тогда
		Возврат;
	КонецЕсли;
	
	Операция = Документы.uu_ОперацияКОтражениюВУпрУчете.ОперацияПоДокументу(Источник.Ссылка);
	
	Если ЗначениеЗаполнено(Операция) Тогда
		
		ОперацияОбъект = Операция.ПолучитьОбъект();
		
		Если Источник.Проведен Тогда
			ОперацияОбъект.ПометкаУдаления = Ложь;
			ОперацияОбъект.Записать(РежимЗаписиДокумента.Проведение);
		ИначеЕсли Источник.ПометкаУдаления Тогда
			ОперацияОбъект.УстановитьПометкуУдаления(Источник.ПометкаУдаления);
		ИначеЕсли Операция.Проведен Тогда
			ОперацияОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			ОперацияОбъект.УстановитьПометкуУдаления(Ложь);
		КонецЕсли;
		
	Иначе
		
		ОперацияОбъект = Документы.uu_ОперацияКОтражениюВУпрУчете.СоздатьДокумент();
		ОперацияОбъект.Дата = Источник.Дата;
		ОперацияОбъект.ПервичныйДокумент = Источник.Ссылка;
		
		Если Источник.Проведен Тогда
			ОперацияОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ОперацияОбъект.Записать();
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ОписаниеСубконто(ЗначениеСубконто) Экспорт
	
	Если Не ЗначениеЗаполнено(ЗначениеСубконто) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТипЗначения = ТипЗнч(ЗначениеСубконто);
	
	Если Перечисления.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
		
		ОписаниеПеречисления = Новый Структура;
		ОписаниеПеречисления.Вставить("ПредопределенноеЗначение", ЗначениеСубконто.Метаданные().ПолноеИмя() + "." + ОбщегоНазначения.ИмяЗначенияПеречисления(ЗначениеСубконто)); 
		
		Возврат ОписаниеПеречисления;
		
	ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
		
		ОписаниеСправочника = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗначениеСубконто, "Код,Наименование"); 
		ОписаниеСправочника.Вставить("ID", XMLСтрока(ЗначениеСубконто));
		ОписаниеСправочника.Вставить("Имя", ЗначениеСубконто.Метаданные().Имя);
		
		Возврат ОписаниеСправочника;
		
	ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
		
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗначениеСубконто, "Номер,Дата,Организация");
		
		ОписаниеДокумента = Новый Структура;
		
		ОписаниеДокумента.Вставить("Имя", 		  ЗначениеСубконто.Метаданные().Имя);
		ОписаниеДокумента.Вставить("ID", 		  XMLСтрока(ЗначениеСубконто));
		ОписаниеДокумента.Вставить("Номер", 	  РеквизитыДокумента.Номер);
		ОписаниеДокумента.Вставить("Дата", 		  РеквизитыДокумента.Дата);
		ОписаниеДокумента.Вставить("Организация", XMLСтрока(РеквизитыДокумента.Организация));
		
		Возврат ОписаниеДокумента;
		
	Иначе
		Возврат Неопределено;		
	КонецЕсли;
	
КонецФункции

Функция ОписаниеПодразделения(Подразделение) Экспорт
	
	РеквизитыПодразделения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Подразделение, "Наименование,ОбособленноеПодразделение,КПП");
	
	РеквизитыПодразделения.Вставить("ID", XMLСтрока(Подразделение));
	
	Возврат РеквизитыПодразделения;
	
КонецФункции

#КонецОбласти