@startuml

!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include FONTAWESOME/users.puml
!include <logos/kafka>

title Архитектурная схема

Person(users, "Пользователи", "", $sprite="users")

Container_Boundary(bp_corp, "Система регл. бухгалтерского учета (БП КОРП)") {
    Component(docA, "Документ A", "", "Первичный документ")
    Component(docB, "Документ B", "", "Первичный документ")
    Component(docC, "Документ C", "", "Первичный документ")
    Component(operation, "Операция к отражению в упр. учете", "", "Документ-абстракция")
    Component(que, "Очередь сообщений", "Регистр сведений")
    Component(ser, "Сериализатор", "Enterprise Data", "Формирует XML-сообщение с набором проводок первичного документа")
    Component(producer, "Kafka Producer", "Native API", "Внешняя компонента")
}

queue "<$kafka>" as kafka

Container_Boundary(finance, "Система упр. финансового учета (БИТ.Финанс)") {
    Component(consumer, "Kafka Consumer", "Native API", "Внешняя компонента")
    Component(messages, "Входящие сообщения", "Справочник")
    Component(deser, "Десериализатор", "Enterprise Data", "Преобразует XML-сообщение в ручную операцию с проводками")
    Component(oper_buh, "Операция", "Документ", "Проводки регл. учета")
    Component(accumrg, "Обороты по бюджетам", "Регистр накопления")
    Component(accountrg, "Журнал проводок (бюджетирование)", "Регистр бухгалтерии")
}

Rel(docA, operation, "Формирует при записи")
Rel(docB, operation, "Формирует при записи")
Rel(docC, operation, "Формирует при записи")
Rel(operation, que, "Регистрируется при записи")
Rel(ser, que, "Обрабатывает новые сообщения")
Rel(users, docA, "Создают")
Rel(users, docB, "Создают")
Rel(users, docC, "Создают")
Rel_R(que, producer, "Предоставляет пул сообщений")
Rel(producer, kafka, "Отправляет сообщения в топик", "TCP/IP")
BiRel(consumer, kafka, "Запрашивает и получает сообщения из топика", "TCP/IP")
Rel(consumer, messages, "Записывает сообщения")
Rel(deser, messages, "Обрабатывает сообщения")
Rel_R(messages, oper_buh, "Преобразуются в объекты системы")
Rel(oper_buh, accumrg, "Отражает факт БДР", "Механизм трансляции")
Rel(oper_buh, accountrg, "Отражает факт БДР", "Механизм трансляции")

@enduml